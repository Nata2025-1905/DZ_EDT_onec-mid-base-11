
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//++ Арсеньева ДЗ ВнесениеИзмененийВКонфигурацию 13,06.25
	//Добавляем на форму реквизит ТП_КонтактноеЛицо
	Если Элементы.Найти("ТП_КонтактноеЛицо") = Неопределено Тогда
		 
		 ЭлементКонтактноеЛицо  = Элементы.Добавить("ТП_КонтактноеЛицо", Тип ("ПолеФормы"),Элементы.ГруппаШапкаПраво);
		 ЭлементКонтактноеЛицо.ПутьКДанным = "Объект.ТП_КонтактноеЛицо";
		 ЭлементКонтактноеЛицо.Вид = ВидПоляФормы.ПолеВвода;
		 ЭлементКонтактноеЛицо.Заголовок = "Контактное лицо (ТП)";
		 
	 КонецЕсли; 
	 // --
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
    
    //++ Арсеньева ДЗ ВнесениеИзмененийВКонфигурацию 13.04.25
    
    Если Элементы.Найти("ТП_Скидка") = Неопределено Тогда
		//Добавление ГруппуСкидки, в которую войдут поле Скидка и кнопка Пересчитать
		ЭлементГруппаСкидки = Элементы.Добавить("ГруппаСкидки", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
		ЭлементГруппаСкидки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ЭлементГруппаСкидки.Отображение = ОтображениеОбычнойГруппы.Нет;
		ЭлементГруппаСкидки.ОтображатьЗаголовок = Ложь;
		ЭлементГруппаСкидки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		//Добавление поля ввода Скидка	
		ЭлементСкидка = Элементы.Добавить("ТП_Скидка", Тип("ПолеФормы"), Элементы.ГруппаСкидки);
		ЭлементСкидка.ПутьКДанным = "Объект.ТП_Скидка";
		ЭлементСкидка.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементСкидка.Заголовок = "Скидка (ТП)";
		ЭлементСкидка.УстановитьДействие("ПриИзменении", "ТП_СкидкаПриИзменении"); 
	КонецЕсли;
	
	Если Элементы.Найти("ТП_ПересчитатьТаблицу") = Неопределено Тогда
		//Добавление кнопки Пересчитать
		КомандаПересчитать = Команды.Добавить("ТП_ПересчитатьТаблицу");
		КомандаПересчитать.Заголовок = "ПересчитатьТаблицу (ТП)";
		КомандаПересчитать.Действие = "ТП_ПересчитатьТаблицу";
		
		КнопкаПересчитать = Элементы.Вставить("ТП_КнопкаПересчитать", Тип("КнопкаФормы"), Элементы.ГруппаСкидки);
		КнопкаПересчитать.ИмяКоманды = "ТП_ПересчитатьТаблицу";
		КнопкаПересчитать.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		КнопкаПересчитать.Отображение  = ОтображениеКнопки.КартинкаИТекст;
		КнопкаПересчитать.Заголовок = "Пересчитать таблицу (ТП)";
		КнопкаПересчитать.Картинка = БиблиотекаКартинок.Перечитать;
		
	КонецЕсли;
    
    //--
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
